<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Jigglypuff</title>
  <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.1/css/bootstrap.min.css" rel="stylesheet">
<script src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.1/JSXTransformer.js"  ></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.1/react.js"  ></script>


  <style>

  </style>
</head>
<body>
  <div class="container">
    <div class="text-center">
      <h1>Jigglypuff</h1>
      <h4>Simple way to download youtube songs.</h4>
    </div>

    <div id="content"></div>

<script type="text/jsx">

function ready(fn) {
  if (document.readyState != 'loading'){
    fn();
  } else {
    document.addEventListener('DOMContentLoaded', fn);
  }
  }

ready(function () {


  var get = function (url, success) {

    var request = new XMLHttpRequest();
    request.open('GET', url, true);

    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        // Success!
        var data = JSON.parse(request.responseText);
        success(data);
      } else {
        // We reached our target server, but it returned an error

      }
    };

    request.onerror = function() {
      // There was a connection error of some sort
    };

    request.send();

  };

  var AddForm= React.createClass({
    handleSubmit: function(e) {
      e.preventDefault();
      var url = React.findDOMNode(this.refs.url).value.trim();
      if (!url) {
        return;
      }

      var request = new XMLHttpRequest();
      request.open('POST', '/trans', true);
      request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
      data = JSON.stringify({"board": "main", "url": url});
      request.send(data);

      React.findDOMNode(this.refs.url).value = '';
      return;
    },
    render: function() {
      return (
      <form action="" method="post" className="form" onSubmit={this.handleSubmit}>
        <div className="form-group">
          <label htmlFor="">Youtube URL:</label>
          <input name="url" type="text" ref="url" className="form-control" /></div>
      <button type="submit" className="btn">Submit</button>
      </form>
      );
    }
  });

  var SongPlayer = React.createClass({
    render: function() {
      return (
        <audio controls preload="metadata">
        <source src={this.props.song_source} type="audio/ogg"/>
        Your browser does not support the audio element.
          </audio>
      );
    },
  });


  var SongRow= React.createClass({
    render: function() {
      var song_source = '/media/' + this.props.file_id;
      if (this.props.file_id) {
        var song_player = <SongPlayer song_source={song_source} /> ;
      }
      return (
          <tr>
            <td>{this.props.youtube_id}</td>
            <td>
            <a href={song_source}>
              {this.props.title}
            </a>
            </td>
            <td>
              {song_player}
            </td>
          </tr>
      );
    }
  });

  var SongsTable= React.createClass({
    getInitialState: function() {
      return {songs: []};
    },
    loadSongsFromServer: function() {
      get("/boards/1",
          function(data) {
            var songs_array = [];
            for (var key in data.songs) {
              if (data.songs.hasOwnProperty(key)) {
               songs_array.push(data.songs[key]);
              }
            }
            this.setState({songs: songs_array});
          }.bind(this)
      );
    },
    componentDidMount: function() {
      this.loadSongsFromServer();
      setInterval(this.loadSongsFromServer, this.props.pollInterval);
    },
    render: function() {
      var songsNodes= this.state.songs.map(function (song) {
        return (
          <SongRow title={song.title} youtube_id={song.youtube_id} file_id={song.file_id} />
        );
      });
      return (
        <table className="table table-striped">
          <tr>
            <th>ID</th>
            <th>Song title</th>
            <th>Player</th>
          </tr>
          {songsNodes}
        </table>
      );
    }
  });

var Content = React.createClass({
  render: function() {
    return (
      <div>
        <AddForm/>
        <SongsTable pollInterval={5000}/>
      </div>
    );
  }
});

React.render(
  <Content />,
  document.getElementById('content')
);

});


</script>
</body>
</html>
